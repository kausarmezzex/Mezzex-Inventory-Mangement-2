@model IEnumerable<Mezzex_Inventory_Mangement.ViewModels.UserViewModel>

@{
    ViewData["Title"] = "Users";
}
<style>
    /* Wrapper for table to add horizontal scrolling */
    .table-responsive {
        overflow-x: auto;
        max-width: 100%;
    }

    /* Compact table style */
    .compact-table {
        font-size: 0.9em; /* Slightly smaller font */
        white-space: nowrap; /* Prevent wrapping in table cells */
    }

        /* Reduce padding in table cells */
        .compact-table th,
        .compact-table td {
            padding: 8px;
            vertical-align: middle;
        }

    /* Button styling adjustments */
    .btn-action {
        font-size: 0.85em;
    }

    /* Search bar styling */
    #userSearch {
        width: 100%;
        max-width: 300px;
        padding: 7px 23px;
        border: 1px solid #ced4da;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease, border-color 0.3s ease;
    }
</style>

<h3 class="text-center my-4">Manage Users</h3>

<div class="d-flex justify-content-between align-items-center mb-3 mt-5">
    <!-- Search input -->
    <input type="text" id="userSearch"
           class="form-control me-3"
           placeholder="Search By Name or Email"
           onkeyup="filterUsers()" />

    <!-- Alerts Section -->
    <div class="flex-grow-1 me-3">
        @await Html.PartialAsync("_AlertMessages")
    </div>

    <!-- Button group -->
    <div class="d-flex">
        <a asp-action="Create" class="btn btn-primary me-2">Add New User</a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover compact-table" id="userTable">
        <thead class="table-dark">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Active</th>
                <th>Roles</th>
                <th>DOB</th>
                <th>Created On</th>
                <th>Created By</th>
                <th>Modified On</th>
                <th>Modified By</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@(user.Active ? "Yes" : "No")</td>
                    <td>
                        @if (user.Roles.Any())
                        {
                            @string.Join(", ", user.Roles)
                        }
                        else
                        {
                            <span>No Roles Assigned</span>
                        }
                    </td>
                    <td>@user.DateOfBirth?.ToString("yyyy-MM-dd")</td>
                    <td>@user.CreatedOn?.ToString("yyyy-MM-dd")</td>
                    <td>@user.CreatedBy</td>
                    <td>@user.ModifiedOn?.ToString("yyyy-MM-dd")</td>
                    <td>@user.ModifiedBy</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning btn-sm btn-action">Edit</a>
                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info btn-sm btn-action">Details</a>
                        <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm btn-action">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function filterUsers() {
        // Get the search input value and convert it to lowercase
        let searchValue = document.getElementById("userSearch").value.toLowerCase();

        // Get the table and rows
        let table = document.getElementById("userTable");
        let rows = table.getElementsByTagName("tr");

        // Loop through the rows, skipping the header
        for (let i = 1; i < rows.length; i++) {
            // Get the cells for first name, last name, and email
            let firstNameCell = rows[i].getElementsByTagName("td")[0];
            let lastNameCell = rows[i].getElementsByTagName("td")[1];
            let emailCell = rows[i].getElementsByTagName("td")[2];

            if (firstNameCell || lastNameCell || emailCell) {
                // Combine text content from these cells
                let textContent = (
                    (firstNameCell.textContent || firstNameCell.innerText) +
                    (lastNameCell.textContent || lastNameCell.innerText) +
                    (emailCell.textContent || emailCell.innerText)
                ).toLowerCase();

                // Show or hide row based on match
                rows[i].style.display = textContent.includes(searchValue) ? "" : "none";
            }
        }
    }
</script>
